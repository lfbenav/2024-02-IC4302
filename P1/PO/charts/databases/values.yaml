elasticsearch:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: "monitoring"
elastic:
  enabled: true
  version: 8.6.1
  replicas: 1
  name: ic4302
kibana:
  enabled: true
  version: 8.6.1
  replicas: 1
  name: ic4302
prometheus-elasticsearch-exporter:
  env:
    ES_USERNAME: elastic
  extraEnvSecrets:
    ES_PASSWORD:
      secret: ic4302-es-elastic-user
      key: elastic
  es:
    uri: http://ic4302-es-http:9200
    cluster_settings: true
  serviceMonitor:
    enabled: true
    namespace: monitoring

mariadb:
  enabled: true
  initdbScripts:
    init.sql: |
      CREATE DATABASE SEMANTIFY;
      USE SEMANTIFY;
      CREATE TABLE processed_files (
          id INT AUTO_INCREMENT PRIMARY KEY,
          filename VARCHAR(255),
          processed BOOLEAN DEFAULT 0
      );
      CREATE TABLE processed_songs (
          id VARCHAR(255) PRIMARY KEY
      );
      CREATE TABLE users (
          username VARCHAR(255) PRIMARY KEY,
          password VARCHAR(255)
      );
      CREATE TABLE prompts (
          id INT AUTO_INCREMENT PRIMARY KEY,
          username VARCHAR(255),
          prompt TEXT,
          date DATETIME DEFAULT CURRENT_TIMESTAMP,
          likes INT DEFAULT 0,
          FOREIGN KEY (username) REFERENCES users(username)
      );
      CREATE TABLE likes (
          id INT AUTO_INCREMENT PRIMARY KEY,
          username VARCHAR(255),  -- El username del usuario que dio el like
          prompt_id INT,          -- El ID del prompt que fue liked
          liked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
          FOREIGN KEY (username) REFERENCES users(username),
          FOREIGN KEY (prompt_id) REFERENCES prompts(id)
      );


      CREATE TABLE follows (
          id INT AUTO_INCREMENT PRIMARY KEY,  
          follower_username VARCHAR(255) NOT NULL,  -- El usuario que sigue a otro (username)
          followee_username VARCHAR(255) NOT NULL,  -- El usuario que está siendo seguido (username)
          follow_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
          CONSTRAINT fk_follower
              FOREIGN KEY (follower_username) REFERENCES users(username)
              ON DELETE CASCADE,   -- Si el usuario se elimina, también se eliminan los seguimientos
          CONSTRAINT fk_followee
              FOREIGN KEY (followee_username) REFERENCES users(username)
              ON DELETE CASCADE    -- Si el usuario seguido se elimina, también se eliminan los seguimientos
      );
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: "monitoring"

memcached:
  enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: "monitoring"
  extraArgs:
    - "-I 5m"  # Aumentar el tamaño máximo a 5 MB

rabbitmq:
  enabled: true
  # Keep this line if you are using Mac OS
  platform: linux/arm64
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: "monitoring"